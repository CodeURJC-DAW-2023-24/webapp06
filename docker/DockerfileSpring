
#################################################
# Imagen base para el contenedor de compilación de Angular
#################################################
FROM node:20.12.1 as angular-build

# Define el directorio de trabajo donde ejecutar comandos para Angular
WORKDIR /angular-app

# Copia el package.json y package-lock.json (o yarn.lock si usas yarn)
COPY frontend/package*.json ./

# Instala todas las dependencias necesarias
RUN npm install

# Copia el código fuente de la aplicación Angular
COPY frontend/ .

# Construye la aplicación Angular para producción
RUN npm run build -- --prod --base-href="/new/"


#################################################
# Imagen base para el contenedor de compilación
#################################################
FROM maven:3.8.4-openjdk-17 as build

# Define el directorio de trabajo donde ejecutar comandos
WORKDIR /project

# Copia las dependencias del proyecto
COPY backend/pom.xml /project/

# Descarga las dependencias del proyecto
RUN mvn dependency:go-offline

# Copia el código del proyecto
COPY backend/src /project/src

# Copia los archivos estáticos de Angular al directorio correcto dentro del proyecto Spring Boot
COPY --from=angular-build /angular-app/dist/* /project/src/main/resources/public/new/

# Compila el proyecto
RUN mvn clean package -DskipTests

#################################################
# Imagen base para el contenedor de la aplicación
#################################################
FROM openjdk:17-oracle

# Define el directorio de trabajo donde se encuentra el JAR
WORKDIR /usr/app/

# Copia el JAR del contenedor de compilación al contenedor de la aplicación
COPY --from=build /project/target/backend-0.0.1-SNAPSHOT.jar /usr/app/app.jar

# Indica el puerto que expone el contenedor
EXPOSE 8443

# Comando que se ejecuta al iniciar el contenedor
ENTRYPOINT [ "java", "-jar", "app.jar" ]

