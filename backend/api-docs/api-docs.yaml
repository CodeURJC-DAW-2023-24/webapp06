openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8443
  description: Generated server url
paths:
  /api/auth/refresh:
    post:
      tags:
      - login-api-controller
      operationId: refreshToken
      parameters:
      - name: refreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/auth/logout:
    post:
      tags:
      - login-api-controller
      operationId: logOut
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/auth/login:
    post:
      tags:
      - login-api-controller
      operationId: login
      parameters:
      - name: accessToken
        in: cookie
        required: false
        schema:
          type: string
      - name: refreshToken
        in: cookie
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /user/search:
    get:
      tags:
      - user-rest-controller
      operationId: getUsersByUsernameStartingWithPaginated
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: username
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageUser'
  /user/paginated:
    get:
      tags:
      - user-rest-controller
      operationId: getUsersPaginated
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageUser'
  /thread/user/paginated:
    get:
      tags:
      - thread-rest-controller
      operationId: getPaginatedThreadsByUsername
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: username
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageThread'
  /thread/paginated:
    get:
      tags:
      - thread-rest-controller
      operationId: getPaginatedThreads
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: nameForum
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageThread'
  /p/validate/{postId}:
    get:
      tags:
      - post-rest-controller
      operationId: validatePost
      parameters:
      - name: postId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /p/update/{postId}:
    get:
      tags:
      - post-rest-controller
      operationId: update
      parameters:
      - name: postId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /p/threads/{threadId}/posts:
    get:
      tags:
      - post-rest-controller
      operationId: getPostsByThread
      parameters:
      - name: threadId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagePost'
  /p/reports:
    get:
      tags:
      - post-rest-controller
      operationId: getReportedPaginated
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagePostDTO'
  /p/report/{postId}:
    get:
      tags:
      - post-rest-controller
      operationId: getMethodName
      parameters:
      - name: postId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /p/like/{postId}:
    get:
      tags:
      - post-rest-controller
      operationId: likePost
      parameters:
      - name: postId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /p/invalidate/{postId}:
    get:
      tags:
      - post-rest-controller
      operationId: invalidatePost
      parameters:
      - name: postId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /p/dislike/{postId}:
    get:
      tags:
      - post-rest-controller
      operationId: dislikePost
      parameters:
      - name: postId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /p/delete/{postId}/{threadName}:
    get:
      tags:
      - post-rest-controller
      operationId: deletePost
      parameters:
      - name: postId
        in: path
        required: true
        schema:
          type: string
      - name: threadName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /chart-rest/threads/weekly:
    get:
      tags:
      - chart-rest-controller
      operationId: getWeeklyThreadsChart
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /chart-rest/threads/monthly:
    get:
      tags:
      - chart-rest-controller
      operationId: getMonthlyThreadsChart
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /chart-rest/threads/annually:
    get:
      tags:
      - chart-rest-controller
      operationId: getAnnuallyThreadsChart
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /chart-rest/posts/weekly:
    get:
      tags:
      - chart-rest-controller
      operationId: getWeeklyPostsChart
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /chart-rest/posts/monthly:
    get:
      tags:
      - chart-rest-controller
      operationId: getMonthlyPostsChart
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /chart-rest/posts/annually:
    get:
      tags:
      - chart-rest-controller
      operationId: getAnnuallyPostsChart
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/forums:
    get:
      tags:
      - forum-api-rest-controller
      summary: Gets all forums
      description: Provides a list of all the forums in the web.
      operationId: getForums
      responses:
        "200":
          description: Successful operation
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
  /api/forums/{id}:
    get:
      tags:
      - forum-api-rest-controller
      summary: Gets a forum by id
      description: Provides a forum based on the specified id.
      operationId: getForumById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json: {}
        "404":
          description: Forum not found
          content:
            '*/*':
              schema:
                type: object
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
  /api/chart/threads/weekly:
    get:
      tags:
      - chart-api-rest-controller
      summary: Gets weekly thread chart
      description: Provides a chart of weekly thread activity based on the specified
        date.
      operationId: getWeeklyThreadsChart_1
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: Successful operation
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: string
  /api/chart/threads/monthly:
    get:
      tags:
      - chart-api-rest-controller
      summary: Gets monthly thread chart
      description: Provides a chart of monthly thread activity based on the specified
        date.
      operationId: getMonthlyThreadsChart_1
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: Successful operation
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: string
  /api/chart/threads/annually:
    get:
      tags:
      - chart-api-rest-controller
      summary: Gets annually thread chart
      description: Provides a chart of annually thread activity based on the specified
        date.
      operationId: getAnnuallyThreadsChart_1
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: Successful operation
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: string
  /api/chart/posts/weekly:
    get:
      tags:
      - chart-api-rest-controller
      summary: Gets weekly post chart
      description: Provides a chart of weekly post activity based on the specified
        date.
      operationId: getWeeklyPostsChart_1
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: Successful operation
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: string
  /api/chart/posts/monthly:
    get:
      tags:
      - chart-api-rest-controller
      summary: Gets monthly post chart
      description: Provides a chart of monthly post activity based on the specified
        date.
      operationId: getMonthlyPostsChart_1
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: Successful operation
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: string
  /api/chart/posts/annually:
    get:
      tags:
      - chart-api-rest-controller
      summary: Gets annually post chart
      description: Provides a chart of annually post activity based on the specified
        date.
      operationId: getAnnuallyPostsChart_1
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: Successful operation
          content:
            application/json: {}
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    PageUser:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/User'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
    SortObject:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        password:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        roles:
          type: array
          items:
            type: string
    Forum:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        threads:
          type: array
          items:
            $ref: '#/components/schemas/Thread'
        icon:
          type: string
    PageThread:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Thread'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        empty:
          type: boolean
    Post:
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
        owner:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: date-time
        thread:
          $ref: '#/components/schemas/Thread'
        userLikes:
          type: array
          items:
            $ref: '#/components/schemas/User'
        userDislikes:
          type: array
          items:
            $ref: '#/components/schemas/User'
        reports:
          type: integer
          format: int32
        image:
          type: object
          properties:
            binaryStream:
              type: object
          writeOnly: true
        likes:
          type: integer
          format: int32
        dislikes:
          type: integer
          format: int32
    Thread:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        forum:
          $ref: '#/components/schemas/Forum'
        posts:
          type: array
          items:
            $ref: '#/components/schemas/Post'
        owner:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: date-time
        numberPosts:
          type: integer
          format: int32
    PagePost:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Post'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        empty:
          type: boolean
    PagePostDTO:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/PostDTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        empty:
          type: boolean
    PostDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
        owner:
          $ref: '#/components/schemas/User'
        thread:
          $ref: '#/components/schemas/Thread'
        reports:
          type: integer
          format: int32
